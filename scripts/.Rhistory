
library(GSVA)
library(limma)
library(tidyr)
source('../functions/pathway_analyses.r')

out_APOE4 = read.table('../data_outputs/apoe3_v_apoe4_degs.csv', sep = ',', header = T)
pathways = readRDS('../data_outputs/pathways.rds')


library(GSVA)
library(limma)
library(tidyr)
source('../functions/pathway_analyses.r')

out_APOE4 = read.table('../data/iPSC_data/apoe3_v_apoe4_degs.csv', sep = ',', header = T)
pathways = readRDS('../data/other_analyses_outputs/pathways.rds')

# show lipid/cholesterol-related pathway enrichment
all_paths = pathways$pathways$all
norm_counts =  read.csv('../data/iPSC_data/ipsc_bulk_no_drug.csv')
rownames(norm_counts) = norm_counts$X
norm_counts$X = NULL
rownames(out_APOE4) = out_APOE4$X
out_APOE4 = out_APOE4[!duplicated(out_APOE4$res.gene_name),]
shared = intersect(rownames(out_APOE4), rownames(norm_counts))
norm_counts = norm_counts[shared,]
rownames(norm_counts) = out_APOE4[shared,'res.gene_name']

# get the metadata
meta1 = read.table('../data/iPSC_data/ipsc_metadata.csv', sep = ',', header = F)
var = as.character(meta1$V2)
var = as.data.frame(ifelse(var=='APOE4', 1, 0))
colnames(var) = 'APOE'
norm_counts
head(norm_counts)
colnames(norm_counts) = as.character(meta1$V2)

norm_counts[c('SOAT1', 'SOAT2', 'CYP46A1'),]

df = na.omit(norm_counts[c('SOAT1', 'SOAT2', 'CYP46A1'),])

df
melt(df)
melt(df)
library(reshape2)
melt(df)
df$gene = rownames(df)
melt(df)
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot() + geom_jitter() + facet_grid(. ~ gene)+ stat_compare_means(method = "wilcox.test") + theme_classic()
library(ggplot2)
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot() + geom_jitter() + facet_grid(. ~ gene)+ stat_compare_means(method = "wilcox.test") + theme_classic()
x = melt(df)

ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot() + geom_jitter() + facet_grid(. ~ gene)+ stat_compare_means(method = "wilcox.test") + theme_classic()
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot() + geom_jitter() + facet_grid(. ~ gene) + theme_classic()

ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot() + geom_jitter() + facet_grid(. ~ gene,  scales="free") + theme_classic()
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot() + geom_jitter() + facet_grid(. ~ gene,  scales="free_y") + theme_classic()
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot() + geom_jitter() + facet_grid(. ~ gene,  scales="free_y") + theme_classic()
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot() + geom_jitter() + facet_grid(. ~ gene,  scales="free_y", nrow = 2) + theme_classic()

ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot() + geom_jitter() + facet_wrap(. ~ gene,  scales="free_y", nrow = 2) + theme_classic()
pdf('../plots/SOAT1_CYP_boxplots_ipsc.pdf', width = 2, height = 4)
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_b
pdf('../plots/SOAT1_CYP_boxplots_ipsc.pdf', width = 2, height = 4)
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot() + geom_jitter() + facet_wrap(. ~ gene,  scales="free_y", nrow = 2) + theme_classic()
dev.off()
pdf('../plots/SOAT1_CYP_boxplots_ipsc.pdf', width = 2, height = 4)
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot() + geom_jitter() + facet_wrap(. ~ gene,  scales="free_y", nrow = 2) + theme_classic()
dev.off()pdf('../plots/SOAT1_CYP_boxplots_ipsc.pdf', width = 4, height = 4)
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot() + geom_jitter() + facet_wrap(. ~ gene,  scales="free_y", nrow = 2) + theme_classic()
dev.off()
pdf('../plots/SOAT1_CYP_boxplots_ipsc.pdf', width = 4, height = 4)
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot() + geom_jitter() + facet_wrap(. ~ gene,  scales="free_y", nrow = 2) + theme_classic()
dev.off()
pdf('../plots/SOAT1_CYP_boxplots_ipsc.pdf', width = 3, height = 4)
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot() + geom_jitter() + facet_wrap(. ~ gene,  scales="free_y", nrow = 2) + theme_classic()
dev.off()
print('done.')

pdf('../plots/SOAT1_CYP_boxplots_ipsc.pdf', width = 3, height = 4)
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot(width = .5) + geom_jitter() + facet_wrap(. ~ gene,  scales="free_y", nrow = 2) + theme_classic()
dev.off()
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot(width = .5) + facet_wrap(. ~ gene,  scales="free_y", nrow = 2) + theme_classic()
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot(width = .5) + facet_wrap(. ~ gene,  scales="free_y", nrow = 2) + theme_classic() + geom_scatter(
)
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot(width = .5) + facet_wrap(. ~ gene,  scales="free_y", nrow = 2) + theme_classic() + geom_point()
x
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot(width = .5) + geom_jitter(width = .05) + facet_wrap(. ~ gene,  scales="free_y", nrow = 2) + theme_classic()
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot(width = .5) + geom_jitter(width = .05, height = 0.01) + facet_wrap(. ~ gene,  scales="free_y", nrow = 2) + theme_classic()
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot(width = .5) + geom_jitter(width = .05, height = 0.05) + facet_wrap(. ~ gene,  scales="free_y", nrow = 2) + theme_classic()
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot(width = .5) + geom_jitter(width = .1, height = 0.1) + facet_wrap(. ~ gene,  scales="free_y", nrow = 2) + theme_classic()
paste0(colnames(norm_counts), c(1,2,3))

colnames(norm_counts) = paste0(colnames(norm_counts), c(1,2,3))

df = na.omit(norm_counts[c('SOAT1', 'SOAT2', 'CYP46A1'),])
df$gene = rownames(df)
x = melt(df)
x
colnames(norm_counts) = as.character(meta1$V2)
colnames(norm_counts) = paste0(colnames(norm_counts), c(.1,.2,.3))
df = na.omit(norm_counts[c('SOAT1', 'SOAT2', 'CYP46A1'),])
df$gene = rownames(df)
x = melt(df)
x
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot(width = .5) + geom_jitter() + facet_wrap(. ~ gene,  scales="free_y", nrow = 2) + theme_classic()
colnames(norm_counts) = as.character(meta1$V2)
colnames(norm_counts) = paste0(colnames(norm_counts),'_', c(1,2,3))
df = na.omit(norm_counts[c('SOAT1', 'SOAT2', 'CYP46A1'),])
df$gene = rownames(df)
x = melt(df)
x
strsplit(x$variable, '_')
strsplit('_',x$variable)
strsplit(as.character(x$variable), '_')
strsplit(as.character(x$variable), '_')x$variable = ifelse(startsWith(x$variable, 'APOE3', 'APOE3', 'APOE4'))

x$variable = ifelse(startsWith(x$variable, 'APOE3'), 'APOE3', 'APOE4')

x
x$variable = ifelse(startsWith(as.character(x$variable), 'APOE3'), 'APOE3', 'APOE4')

x
pdf('../plots/SOAT1_CYP_boxplots_ipsc.pdf', width = 3, height = 4)
ggplot(x, aes(x=variable, y=value, col = variable)) +
      geom_boxplot(width = .5) + geom_jitter() + facet_wrap(. ~ gene,  scales="free_y", nrow = 2) + theme_classic()
dev.off()
out_APOE4
head(out)
head(
out_APOE4)
out_APOE4[out_APOE4$res.gene_name%in%c('SOAT1', 'CYP46A1'),]
out_APOE4 = read.table('../data/iPSC_data/apoe3_v_apoe4_degs.csv', sep = ',', header = T)

read.table('/Users/work/Downloads/OPC_DEG_statistics.txt')
x = read.table('/Users/work/Downloads/OPC_DEG_statistics.txt')
head(x)
head(out_APOE4)
all = merge(out_APOE4, x, by.x = 'res.gene_name', by.y = 'V2')
head(all)
plot(all$res.P.Value, all$V12)
plot(all$res.P.Value, all$V12)
q()
